services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

  web-service:
    container_name: web-service
    restart: on-failure
    build:
      context: .
      dockerfile: ./docker/web_service/Dockerfile
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: "sqlite+aiosqlite:///db/sqlite.db"
      MESSAGE_BROKER_HOST_URL: "rabbitmq"
      SECRET_KEY: "${SECRET_KEY}"
      ALGORITHM: "HS256"
      ACCESS_TOKEN_EXPIRE_DAYS: 30
      COOKIES_EXPIRE_DAYS: 14
      TOKEN_COOKIE_NAME: "access_token"
    depends_on:
      - rabbitmq

  model-service:
    container_name: model-service
    restart: on-failure
    build:
      context: .
      dockerfile: ./docker/model_service/Dockerfile
    environment:
      MESSAGE_BROKER_HOST_URL: "rabbitmq"
    depends_on:
      - rabbitmq

  frontend:
    container_name: frontend
    restart: on-failure
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    environment:
      BACKEND_URL: "http://web-service:8000"
      ACCESS_TOKEN_EXPIRE_DAYS: 30
      COOKIES_EXPIRE_DAYS: 14
      TOKEN_COOKIE_NAME: "access_token"
    ports:
      - "8501:8501"
    depends_on:
      - web-service
      - model-service

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - web-service

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./monitoring/grafana:/etc/grafana
    depends_on:
      - prometheus